{
  "version": 3,
  "sources": ["../../tailwind-merge/src/lib/tw-join.ts", "../../tailwind-merge/src/lib/class-utils.ts", "../../tailwind-merge/src/lib/lru-cache.ts", "../../tailwind-merge/src/lib/modifier-utils.ts", "../../tailwind-merge/src/lib/config-utils.ts", "../../tailwind-merge/src/lib/merge-classlist.ts", "../../tailwind-merge/src/lib/create-tailwind-merge.ts", "../../tailwind-merge/src/lib/from-theme.ts", "../../tailwind-merge/src/lib/validators.ts", "../../tailwind-merge/src/lib/default-config.ts", "../../tailwind-merge/src/lib/merge-configs.ts", "../../tailwind-merge/src/lib/extend-tailwind-merge.ts", "../../tailwind-merge/src/lib/tw-merge.ts", "../../tailwind-merge/src/index.ts"],
  "sourcesContent": ["/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n", "import { ClassGroup, ClassGroupId, ClassValidator, Config, ThemeGetter, ThemeObject } from './types'\n\nexport interface ClassPartObject {\n    nextPart: Map<string, ClassPartObject>\n    validators: ClassValidatorObject[]\n    classGroupId?: ClassGroupId\n}\n\ninterface ClassValidatorObject {\n    classGroupId: ClassGroupId\n    validator: ClassValidator\n}\n\nconst CLASS_PART_SEPARATOR = '-'\n\nexport function createClassUtils(config: Config) {\n    const classMap = createClassMap(config)\n    const { conflictingClassGroups, conflictingClassGroupModifiers = {} } = config\n\n    function getClassGroupId(className: string) {\n        const classParts = className.split(CLASS_PART_SEPARATOR)\n\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n        if (classParts[0] === '' && classParts.length !== 1) {\n            classParts.shift()\n        }\n\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\n    }\n\n    function getConflictingClassGroupIds(classGroupId: ClassGroupId, hasPostfixModifier: boolean) {\n        const conflicts = conflictingClassGroups[classGroupId] || []\n\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\n        }\n\n        return conflicts\n    }\n\n    return {\n        getClassGroupId,\n        getConflictingClassGroupIds,\n    }\n}\n\nfunction getGroupRecursive(\n    classParts: string[],\n    classPartObject: ClassPartObject,\n): ClassGroupId | undefined {\n    if (classParts.length === 0) {\n        return classPartObject.classGroupId\n    }\n\n    const currentClassPart = classParts[0]!\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\n    const classGroupFromNextClassPart = nextClassPartObject\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\n        : undefined\n\n    if (classGroupFromNextClassPart) {\n        return classGroupFromNextClassPart\n    }\n\n    if (classPartObject.validators.length === 0) {\n        return undefined\n    }\n\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\n\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\n}\n\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\n\nfunction getGroupIdForArbitraryProperty(className: string) {\n    if (arbitraryPropertyRegex.test(className)) {\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\n        const property = arbitraryPropertyClassName?.substring(\n            0,\n            arbitraryPropertyClassName.indexOf(':'),\n        )\n\n        if (property) {\n            // I use two dots here because one dot is used as prefix for class groups in plugins\n            return 'arbitrary..' + property\n        }\n    }\n}\n\n/**\n * Exported for testing only\n */\nexport function createClassMap(config: Config) {\n    const { theme, prefix } = config\n    const classMap: ClassPartObject = {\n        nextPart: new Map<string, ClassPartObject>(),\n        validators: [],\n    }\n\n    const prefixedClassGroupEntries = getPrefixedClassGroupEntries(\n        Object.entries(config.classGroups),\n        prefix,\n    )\n\n    prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n        processClassesRecursively(classGroup, classMap, classGroupId, theme)\n    })\n\n    return classMap\n}\n\nfunction processClassesRecursively(\n    classGroup: ClassGroup,\n    classPartObject: ClassPartObject,\n    classGroupId: ClassGroupId,\n    theme: ThemeObject,\n) {\n    classGroup.forEach((classDefinition) => {\n        if (typeof classDefinition === 'string') {\n            const classPartObjectToEdit =\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\n            classPartObjectToEdit.classGroupId = classGroupId\n            return\n        }\n\n        if (typeof classDefinition === 'function') {\n            if (isThemeGetter(classDefinition)) {\n                processClassesRecursively(\n                    classDefinition(theme),\n                    classPartObject,\n                    classGroupId,\n                    theme,\n                )\n                return\n            }\n\n            classPartObject.validators.push({\n                validator: classDefinition,\n                classGroupId,\n            })\n\n            return\n        }\n\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\n            processClassesRecursively(\n                classGroup,\n                getPart(classPartObject, key),\n                classGroupId,\n                theme,\n            )\n        })\n    })\n}\n\nfunction getPart(classPartObject: ClassPartObject, path: string) {\n    let currentClassPartObject = classPartObject\n\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\n            currentClassPartObject.nextPart.set(pathPart, {\n                nextPart: new Map(),\n                validators: [],\n            })\n        }\n\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\n    })\n\n    return currentClassPartObject\n}\n\nfunction isThemeGetter(func: ClassValidator | ThemeGetter): func is ThemeGetter {\n    return (func as ThemeGetter).isThemeGetter\n}\n\nfunction getPrefixedClassGroupEntries(\n    classGroupEntries: Array<[classGroupId: string, classGroup: ClassGroup]>,\n    prefix: string | undefined,\n): Array<[classGroupId: string, classGroup: ClassGroup]> {\n    if (!prefix) {\n        return classGroupEntries\n    }\n\n    return classGroupEntries.map(([classGroupId, classGroup]) => {\n        const prefixedClassGroup = classGroup.map((classDefinition) => {\n            if (typeof classDefinition === 'string') {\n                return prefix + classDefinition\n            }\n\n            if (typeof classDefinition === 'object') {\n                return Object.fromEntries(\n                    Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]),\n                )\n            }\n\n            return classDefinition\n        })\n\n        return [classGroupId, prefixedClassGroup]\n    })\n}\n", "// Export is needed because TypeScript complains about an error otherwise:\n// Error: \u2026/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"\u2026/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n", "import { Config } from './types'\n\nexport const IMPORTANT_MODIFIER = '!'\n\nexport function createSplitModifiers(config: Config) {\n    const separator = config.separator || ':'\n    const isSeparatorSingleCharacter = separator.length === 1\n    const firstSeparatorCharacter = separator[0]\n    const separatorLength = separator.length\n\n    // splitModifiers inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n    return function splitModifiers(className: string) {\n        const modifiers = []\n\n        let bracketDepth = 0\n        let modifierStart = 0\n        let postfixModifierPosition: number | undefined\n\n        for (let index = 0; index < className.length; index++) {\n            let currentCharacter = className[index]\n\n            if (bracketDepth === 0) {\n                if (\n                    currentCharacter === firstSeparatorCharacter &&\n                    (isSeparatorSingleCharacter ||\n                        className.slice(index, index + separatorLength) === separator)\n                ) {\n                    modifiers.push(className.slice(modifierStart, index))\n                    modifierStart = index + separatorLength\n                    continue\n                }\n\n                if (currentCharacter === '/') {\n                    postfixModifierPosition = index\n                    continue\n                }\n            }\n\n            if (currentCharacter === '[') {\n                bracketDepth++\n            } else if (currentCharacter === ']') {\n                bracketDepth--\n            }\n        }\n\n        const baseClassNameWithImportantModifier =\n            modifiers.length === 0 ? className : className.substring(modifierStart)\n        const hasImportantModifier =\n            baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER)\n        const baseClassName = hasImportantModifier\n            ? baseClassNameWithImportantModifier.substring(1)\n            : baseClassNameWithImportantModifier\n\n        const maybePostfixModifierPosition =\n            postfixModifierPosition && postfixModifierPosition > modifierStart\n                ? postfixModifierPosition - modifierStart\n                : undefined\n\n        return {\n            modifiers,\n            hasImportantModifier,\n            baseClassName,\n            maybePostfixModifierPosition,\n        }\n    }\n}\n\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nexport function sortModifiers(modifiers: string[]) {\n    if (modifiers.length <= 1) {\n        return modifiers\n    }\n\n    const sortedModifiers: string[] = []\n    let unsortedModifiers: string[] = []\n\n    modifiers.forEach((modifier) => {\n        const isArbitraryVariant = modifier[0] === '['\n\n        if (isArbitraryVariant) {\n            sortedModifiers.push(...unsortedModifiers.sort(), modifier)\n            unsortedModifiers = []\n        } else {\n            unsortedModifiers.push(modifier)\n        }\n    })\n\n    sortedModifiers.push(...unsortedModifiers.sort())\n\n    return sortedModifiers\n}\n", "import { createClassUtils } from './class-utils'\nimport { createLruCache } from './lru-cache'\nimport { createSplitModifiers } from './modifier-utils'\nimport { Config } from './types'\n\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createConfigUtils(config: Config) {\n    return {\n        cache: createLruCache<string, string>(config.cacheSize),\n        splitModifiers: createSplitModifiers(config),\n        ...createClassUtils(config),\n    }\n}\n", "import { ConfigUtils } from './config-utils'\nimport { IMPORTANT_MODIFIER, sortModifiers } from './modifier-utils'\n\nconst SPLIT_CLASSES_REGEX = /\\s+/\n\nexport function mergeClassList(classList: string, configUtils: ConfigUtils) {\n    const { splitModifiers, getClassGroupId, getConflictingClassGroupIds } = configUtils\n\n    /**\n     * Set of classGroupIds in following format:\n     * `{importantModifier}{variantModifiers}{classGroupId}`\n     * @example 'float'\n     * @example 'hover:focus:bg-color'\n     * @example 'md:!pr'\n     */\n    const classGroupsInConflict = new Set<string>()\n\n    return (\n        classList\n            .trim()\n            .split(SPLIT_CLASSES_REGEX)\n            .map((originalClassName) => {\n                const {\n                    modifiers,\n                    hasImportantModifier,\n                    baseClassName,\n                    maybePostfixModifierPosition,\n                } = splitModifiers(originalClassName)\n\n                let classGroupId = getClassGroupId(\n                    maybePostfixModifierPosition\n                        ? baseClassName.substring(0, maybePostfixModifierPosition)\n                        : baseClassName,\n                )\n\n                let hasPostfixModifier = Boolean(maybePostfixModifierPosition)\n\n                if (!classGroupId) {\n                    if (!maybePostfixModifierPosition) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    classGroupId = getClassGroupId(baseClassName)\n\n                    if (!classGroupId) {\n                        return {\n                            isTailwindClass: false as const,\n                            originalClassName,\n                        }\n                    }\n\n                    hasPostfixModifier = false\n                }\n\n                const variantModifier = sortModifiers(modifiers).join(':')\n\n                const modifierId = hasImportantModifier\n                    ? variantModifier + IMPORTANT_MODIFIER\n                    : variantModifier\n\n                return {\n                    isTailwindClass: true as const,\n                    modifierId,\n                    classGroupId,\n                    originalClassName,\n                    hasPostfixModifier,\n                }\n            })\n            .reverse()\n            // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n            .filter((parsed) => {\n                if (!parsed.isTailwindClass) {\n                    return true\n                }\n\n                const { modifierId, classGroupId, hasPostfixModifier } = parsed\n\n                const classId = modifierId + classGroupId\n\n                if (classGroupsInConflict.has(classId)) {\n                    return false\n                }\n\n                classGroupsInConflict.add(classId)\n\n                getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) =>\n                    classGroupsInConflict.add(modifierId + group),\n                )\n\n                return true\n            })\n            .reverse()\n            .map((parsed) => parsed.originalClassName)\n            .join(' ')\n    )\n}\n", "import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { Config } from './types'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig(),\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n", "import { ThemeGetter, ThemeObject } from './types'\n\nexport function fromTheme(key: string): ThemeGetter {\n    const themeGetter = (theme: ThemeObject) => theme[key] || []\n\n    themeGetter.isThemeGetter = true as const\n\n    return themeGetter\n}\n", "const arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex =\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|^0$/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(value: string) {\n    return (\n        isNumber(value) ||\n        stringLengths.has(value) ||\n        fractionRegex.test(value) ||\n        isArbitraryLength(value)\n    )\n}\n\nexport function isArbitraryLength(value: string) {\n    return getIsArbitraryValue(value, 'length', isLengthOnly)\n}\n\nexport function isArbitrarySize(value: string) {\n    return getIsArbitraryValue(value, 'size', isNever)\n}\n\nexport function isArbitraryPosition(value: string) {\n    return getIsArbitraryValue(value, 'position', isNever)\n}\n\nexport function isArbitraryUrl(value: string) {\n    return getIsArbitraryValue(value, 'url', isUrl)\n}\n\nexport function isArbitraryNumber(value: string) {\n    return getIsArbitraryValue(value, 'number', isNumber)\n}\n\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nexport const isArbitraryWeight = isArbitraryNumber\n\nexport function isNumber(value: string) {\n    return !Number.isNaN(Number(value))\n}\n\nexport function isPercent(value: string) {\n    return value.endsWith('%') && isNumber(value.slice(0, -1))\n}\n\nexport function isInteger(value: string) {\n    return isIntegerOnly(value) || getIsArbitraryValue(value, 'number', isIntegerOnly)\n}\n\nexport function isArbitraryValue(value: string) {\n    return arbitraryValueRegex.test(value)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(value: string) {\n    return tshirtUnitRegex.test(value)\n}\n\nexport function isArbitraryShadow(value: string) {\n    return getIsArbitraryValue(value, '', isShadow)\n}\n\nfunction getIsArbitraryValue(value: string, label: string, testValue: (value: string) => boolean) {\n    const result = arbitraryValueRegex.exec(value)\n\n    if (result) {\n        if (result[1]) {\n            return result[1] === label\n        }\n\n        return testValue(result[2]!)\n    }\n\n    return false\n}\n\nfunction isLengthOnly(value: string) {\n    return lengthUnitRegex.test(value)\n}\n\nfunction isNever() {\n    return false\n}\n\nfunction isUrl(value: string) {\n    return value.startsWith('url(')\n}\n\nfunction isIntegerOnly(value: string) {\n    return Number.isInteger(Number(value))\n}\n\nfunction isShadow(value: string) {\n    return shadowRegex.test(value)\n}\n", "import { fromTheme } from './from-theme'\nimport { Config } from './types'\nimport {\n    isAny,\n    isArbitraryLength,\n    isArbitraryNumber,\n    isArbitraryPosition,\n    isArbitraryShadow,\n    isArbitrarySize,\n    isArbitraryUrl,\n    isArbitraryValue,\n    isInteger,\n    isLength,\n    isNumber,\n    isPercent,\n    isTshirtSize,\n} from './validators'\n\nexport function getDefaultConfig() {\n    const colors = fromTheme('colors')\n    const spacing = fromTheme('spacing')\n    const blur = fromTheme('blur')\n    const brightness = fromTheme('brightness')\n    const borderColor = fromTheme('borderColor')\n    const borderRadius = fromTheme('borderRadius')\n    const borderSpacing = fromTheme('borderSpacing')\n    const borderWidth = fromTheme('borderWidth')\n    const contrast = fromTheme('contrast')\n    const grayscale = fromTheme('grayscale')\n    const hueRotate = fromTheme('hueRotate')\n    const invert = fromTheme('invert')\n    const gap = fromTheme('gap')\n    const gradientColorStops = fromTheme('gradientColorStops')\n    const gradientColorStopPositions = fromTheme('gradientColorStopPositions')\n    const inset = fromTheme('inset')\n    const margin = fromTheme('margin')\n    const opacity = fromTheme('opacity')\n    const padding = fromTheme('padding')\n    const saturate = fromTheme('saturate')\n    const scale = fromTheme('scale')\n    const sepia = fromTheme('sepia')\n    const skew = fromTheme('skew')\n    const space = fromTheme('space')\n    const translate = fromTheme('translate')\n\n    const getOverscroll = () => ['auto', 'contain', 'none'] as const\n    const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\n    const getSpacingWithAuto = () => ['auto', spacing] as const\n    const getLengthWithEmpty = () => ['', isLength] as const\n    const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue] as const\n    const getPositions = () =>\n        [\n            'bottom',\n            'center',\n            'left',\n            'left-bottom',\n            'left-top',\n            'right',\n            'right-bottom',\n            'right-top',\n            'top',\n        ] as const\n    const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'] as const\n    const getBlendModes = () =>\n        [\n            'normal',\n            'multiply',\n            'screen',\n            'overlay',\n            'darken',\n            'lighten',\n            'color-dodge',\n            'color-burn',\n            'hard-light',\n            'soft-light',\n            'difference',\n            'exclusion',\n            'hue',\n            'saturation',\n            'color',\n            'luminosity',\n            'plus-lighter',\n        ] as const\n    const getAlign = () =>\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'] as const\n    const getZeroAndEmpty = () => ['', '0', isArbitraryValue] as const\n    const getBreaks = () =>\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\n    const getNumber = () => [isNumber, isArbitraryNumber]\n    const getNumberAndArbitrary = () => [isNumber, isArbitraryValue]\n\n    return {\n        cacheSize: 500,\n        theme: {\n            colors: [isAny],\n            spacing: [isLength],\n            blur: ['none', '', isTshirtSize, isArbitraryLength],\n            brightness: getNumber(),\n            borderColor: [colors],\n            borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n            borderSpacing: [spacing],\n            borderWidth: getLengthWithEmpty(),\n            contrast: getNumber(),\n            grayscale: getZeroAndEmpty(),\n            hueRotate: getNumberAndArbitrary(),\n            invert: getZeroAndEmpty(),\n            gap: [spacing],\n            gradientColorStops: [colors],\n            gradientColorStopPositions: [isPercent, isArbitraryLength],\n            inset: getSpacingWithAuto(),\n            margin: getSpacingWithAuto(),\n            opacity: getNumber(),\n            padding: [spacing],\n            saturate: getNumber(),\n            scale: getNumber(),\n            sepia: getZeroAndEmpty(),\n            skew: getNumberAndArbitrary(),\n            space: [spacing],\n            translate: [spacing],\n        },\n        classGroups: {\n            // Layout\n            /**\n             * Aspect Ratio\n             * @see https://tailwindcss.com/docs/aspect-ratio\n             */\n            aspect: [{ aspect: ['auto', 'square', 'video', isArbitraryValue] }],\n            /**\n             * Container\n             * @see https://tailwindcss.com/docs/container\n             */\n            container: ['container'],\n            /**\n             * Columns\n             * @see https://tailwindcss.com/docs/columns\n             */\n            columns: [{ columns: [isTshirtSize] }],\n            /**\n             * Break After\n             * @see https://tailwindcss.com/docs/break-after\n             */\n            'break-after': [{ 'break-after': getBreaks() }],\n            /**\n             * Break Before\n             * @see https://tailwindcss.com/docs/break-before\n             */\n            'break-before': [{ 'break-before': getBreaks() }],\n            /**\n             * Break Inside\n             * @see https://tailwindcss.com/docs/break-inside\n             */\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\n            /**\n             * Box Decoration Break\n             * @see https://tailwindcss.com/docs/box-decoration-break\n             */\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\n            /**\n             * Box Sizing\n             * @see https://tailwindcss.com/docs/box-sizing\n             */\n            box: [{ box: ['border', 'content'] }],\n            /**\n             * Display\n             * @see https://tailwindcss.com/docs/display\n             */\n            display: [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden',\n            ],\n            /**\n             * Floats\n             * @see https://tailwindcss.com/docs/float\n             */\n            float: [{ float: ['right', 'left', 'none'] }],\n            /**\n             * Clear\n             * @see https://tailwindcss.com/docs/clear\n             */\n            clear: [{ clear: ['left', 'right', 'both', 'none'] }],\n            /**\n             * Isolation\n             * @see https://tailwindcss.com/docs/isolation\n             */\n            isolation: ['isolate', 'isolation-auto'],\n            /**\n             * Object Fit\n             * @see https://tailwindcss.com/docs/object-fit\n             */\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\n            /**\n             * Object Position\n             * @see https://tailwindcss.com/docs/object-position\n             */\n            'object-position': [{ object: [...getPositions(), isArbitraryValue] }],\n            /**\n             * Overflow\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            overflow: [{ overflow: getOverflow() }],\n            /**\n             * Overflow X\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-x': [{ 'overflow-x': getOverflow() }],\n            /**\n             * Overflow Y\n             * @see https://tailwindcss.com/docs/overflow\n             */\n            'overflow-y': [{ 'overflow-y': getOverflow() }],\n            /**\n             * Overscroll Behavior\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            overscroll: [{ overscroll: getOverscroll() }],\n            /**\n             * Overscroll Behavior X\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-x': [{ 'overscroll-x': getOverscroll() }],\n            /**\n             * Overscroll Behavior Y\n             * @see https://tailwindcss.com/docs/overscroll-behavior\n             */\n            'overscroll-y': [{ 'overscroll-y': getOverscroll() }],\n            /**\n             * Position\n             * @see https://tailwindcss.com/docs/position\n             */\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n            /**\n             * Top / Right / Bottom / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            inset: [{ inset: [inset] }],\n            /**\n             * Right / Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-x': [{ 'inset-x': [inset] }],\n            /**\n             * Top / Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            'inset-y': [{ 'inset-y': [inset] }],\n            /**\n             * Start\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            start: [{ start: [inset] }],\n            /**\n             * End\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            end: [{ end: [inset] }],\n            /**\n             * Top\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            top: [{ top: [inset] }],\n            /**\n             * Right\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            right: [{ right: [inset] }],\n            /**\n             * Bottom\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            bottom: [{ bottom: [inset] }],\n            /**\n             * Left\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\n             */\n            left: [{ left: [inset] }],\n            /**\n             * Visibility\n             * @see https://tailwindcss.com/docs/visibility\n             */\n            visibility: ['visible', 'invisible', 'collapse'],\n            /**\n             * Z-Index\n             * @see https://tailwindcss.com/docs/z-index\n             */\n            z: [{ z: ['auto', isInteger] }],\n            // Flexbox and Grid\n            /**\n             * Flex Basis\n             * @see https://tailwindcss.com/docs/flex-basis\n             */\n            basis: [{ basis: getSpacingWithAuto() }],\n            /**\n             * Flex Direction\n             * @see https://tailwindcss.com/docs/flex-direction\n             */\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\n            /**\n             * Flex Wrap\n             * @see https://tailwindcss.com/docs/flex-wrap\n             */\n            'flex-wrap': [{ flex: ['wrap', 'wrap-reverse', 'nowrap'] }],\n            /**\n             * Flex\n             * @see https://tailwindcss.com/docs/flex\n             */\n            flex: [{ flex: ['1', 'auto', 'initial', 'none', isArbitraryValue] }],\n            /**\n             * Flex Grow\n             * @see https://tailwindcss.com/docs/flex-grow\n             */\n            grow: [{ grow: getZeroAndEmpty() }],\n            /**\n             * Flex Shrink\n             * @see https://tailwindcss.com/docs/flex-shrink\n             */\n            shrink: [{ shrink: getZeroAndEmpty() }],\n            /**\n             * Order\n             * @see https://tailwindcss.com/docs/order\n             */\n            order: [{ order: ['first', 'last', 'none', isInteger] }],\n            /**\n             * Grid Template Columns\n             * @see https://tailwindcss.com/docs/grid-template-columns\n             */\n            'grid-cols': [{ 'grid-cols': [isAny] }],\n            /**\n             * Grid Column Start / End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start-end': [{ col: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Column Start\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-start': [{ 'col-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Column End\n             * @see https://tailwindcss.com/docs/grid-column\n             */\n            'col-end': [{ 'col-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Template Rows\n             * @see https://tailwindcss.com/docs/grid-template-rows\n             */\n            'grid-rows': [{ 'grid-rows': [isAny] }],\n            /**\n             * Grid Row Start / End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start-end': [{ row: ['auto', { span: [isInteger] }, isArbitraryValue] }],\n            /**\n             * Grid Row Start\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-start': [{ 'row-start': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Row End\n             * @see https://tailwindcss.com/docs/grid-row\n             */\n            'row-end': [{ 'row-end': getNumberWithAutoAndArbitrary() }],\n            /**\n             * Grid Auto Flow\n             * @see https://tailwindcss.com/docs/grid-auto-flow\n             */\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\n            /**\n             * Grid Auto Columns\n             * @see https://tailwindcss.com/docs/grid-auto-columns\n             */\n            'auto-cols': [{ 'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Grid Auto Rows\n             * @see https://tailwindcss.com/docs/grid-auto-rows\n             */\n            'auto-rows': [{ 'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue] }],\n            /**\n             * Gap\n             * @see https://tailwindcss.com/docs/gap\n             */\n            gap: [{ gap: [gap] }],\n            /**\n             * Gap X\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-x': [{ 'gap-x': [gap] }],\n            /**\n             * Gap Y\n             * @see https://tailwindcss.com/docs/gap\n             */\n            'gap-y': [{ 'gap-y': [gap] }],\n            /**\n             * Justify Content\n             * @see https://tailwindcss.com/docs/justify-content\n             */\n            'justify-content': [{ justify: ['normal', ...getAlign()] }],\n            /**\n             * Justify Items\n             * @see https://tailwindcss.com/docs/justify-items\n             */\n            'justify-items': [{ 'justify-items': ['start', 'end', 'center', 'stretch'] }],\n            /**\n             * Justify Self\n             * @see https://tailwindcss.com/docs/justify-self\n             */\n            'justify-self': [{ 'justify-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            /**\n             * Align Content\n             * @see https://tailwindcss.com/docs/align-content\n             */\n            'align-content': [{ content: ['normal', ...getAlign(), 'baseline'] }],\n            /**\n             * Align Items\n             * @see https://tailwindcss.com/docs/align-items\n             */\n            'align-items': [{ items: ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Align Self\n             * @see https://tailwindcss.com/docs/align-self\n             */\n            'align-self': [{ self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline'] }],\n            /**\n             * Place Content\n             * @see https://tailwindcss.com/docs/place-content\n             */\n            'place-content': [{ 'place-content': [...getAlign(), 'baseline'] }],\n            /**\n             * Place Items\n             * @see https://tailwindcss.com/docs/place-items\n             */\n            'place-items': [{ 'place-items': ['start', 'end', 'center', 'baseline', 'stretch'] }],\n            /**\n             * Place Self\n             * @see https://tailwindcss.com/docs/place-self\n             */\n            'place-self': [{ 'place-self': ['auto', 'start', 'end', 'center', 'stretch'] }],\n            // Spacing\n            /**\n             * Padding\n             * @see https://tailwindcss.com/docs/padding\n             */\n            p: [{ p: [padding] }],\n            /**\n             * Padding X\n             * @see https://tailwindcss.com/docs/padding\n             */\n            px: [{ px: [padding] }],\n            /**\n             * Padding Y\n             * @see https://tailwindcss.com/docs/padding\n             */\n            py: [{ py: [padding] }],\n            /**\n             * Padding Start\n             * @see https://tailwindcss.com/docs/padding\n             */\n            ps: [{ ps: [padding] }],\n            /**\n             * Padding End\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pe: [{ pe: [padding] }],\n            /**\n             * Padding Top\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pt: [{ pt: [padding] }],\n            /**\n             * Padding Right\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pr: [{ pr: [padding] }],\n            /**\n             * Padding Bottom\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pb: [{ pb: [padding] }],\n            /**\n             * Padding Left\n             * @see https://tailwindcss.com/docs/padding\n             */\n            pl: [{ pl: [padding] }],\n            /**\n             * Margin\n             * @see https://tailwindcss.com/docs/margin\n             */\n            m: [{ m: [margin] }],\n            /**\n             * Margin X\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mx: [{ mx: [margin] }],\n            /**\n             * Margin Y\n             * @see https://tailwindcss.com/docs/margin\n             */\n            my: [{ my: [margin] }],\n            /**\n             * Margin Start\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ms: [{ ms: [margin] }],\n            /**\n             * Margin End\n             * @see https://tailwindcss.com/docs/margin\n             */\n            me: [{ me: [margin] }],\n            /**\n             * Margin Top\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mt: [{ mt: [margin] }],\n            /**\n             * Margin Right\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mr: [{ mr: [margin] }],\n            /**\n             * Margin Bottom\n             * @see https://tailwindcss.com/docs/margin\n             */\n            mb: [{ mb: [margin] }],\n            /**\n             * Margin Left\n             * @see https://tailwindcss.com/docs/margin\n             */\n            ml: [{ ml: [margin] }],\n            /**\n             * Space Between X\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x': [{ 'space-x': [space] }],\n            /**\n             * Space Between X Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-x-reverse': ['space-x-reverse'],\n            /**\n             * Space Between Y\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y': [{ 'space-y': [space] }],\n            /**\n             * Space Between Y Reverse\n             * @see https://tailwindcss.com/docs/space\n             */\n            'space-y-reverse': ['space-y-reverse'],\n            // Sizing\n            /**\n             * Width\n             * @see https://tailwindcss.com/docs/width\n             */\n            w: [{ w: ['auto', 'min', 'max', 'fit', spacing] }],\n            /**\n             * Min-Width\n             * @see https://tailwindcss.com/docs/min-width\n             */\n            'min-w': [{ 'min-w': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Width\n             * @see https://tailwindcss.com/docs/max-width\n             */\n            'max-w': [\n                {\n                    'max-w': [\n                        '0',\n                        'none',\n                        'full',\n                        'min',\n                        'max',\n                        'fit',\n                        'prose',\n                        { screen: [isTshirtSize] },\n                        isTshirtSize,\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Height\n             * @see https://tailwindcss.com/docs/height\n             */\n            h: [{ h: [spacing, 'auto', 'min', 'max', 'fit'] }],\n            /**\n             * Min-Height\n             * @see https://tailwindcss.com/docs/min-height\n             */\n            'min-h': [{ 'min-h': ['min', 'max', 'fit', isLength] }],\n            /**\n             * Max-Height\n             * @see https://tailwindcss.com/docs/max-height\n             */\n            'max-h': [{ 'max-h': [spacing, 'min', 'max', 'fit'] }],\n            // Typography\n            /**\n             * Font Size\n             * @see https://tailwindcss.com/docs/font-size\n             */\n            'font-size': [{ text: ['base', isTshirtSize, isArbitraryLength] }],\n            /**\n             * Font Smoothing\n             * @see https://tailwindcss.com/docs/font-smoothing\n             */\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n            /**\n             * Font Style\n             * @see https://tailwindcss.com/docs/font-style\n             */\n            'font-style': ['italic', 'not-italic'],\n            /**\n             * Font Weight\n             * @see https://tailwindcss.com/docs/font-weight\n             */\n            'font-weight': [\n                {\n                    font: [\n                        'thin',\n                        'extralight',\n                        'light',\n                        'normal',\n                        'medium',\n                        'semibold',\n                        'bold',\n                        'extrabold',\n                        'black',\n                        isArbitraryNumber,\n                    ],\n                },\n            ],\n            /**\n             * Font Family\n             * @see https://tailwindcss.com/docs/font-family\n             */\n            'font-family': [{ font: [isAny] }],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-normal': ['normal-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-ordinal': ['ordinal'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-slashed-zero': ['slashed-zero'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n            /**\n             * Font Variant Numeric\n             * @see https://tailwindcss.com/docs/font-variant-numeric\n             */\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n            /**\n             * Letter Spacing\n             * @see https://tailwindcss.com/docs/letter-spacing\n             */\n            tracking: [\n                {\n                    tracking: [\n                        'tighter',\n                        'tight',\n                        'normal',\n                        'wide',\n                        'wider',\n                        'widest',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Line Clamp\n             * @see https://tailwindcss.com/docs/line-clamp\n             */\n            'line-clamp': [{ 'line-clamp': ['none', isNumber, isArbitraryNumber] }],\n            /**\n             * Line Height\n             * @see https://tailwindcss.com/docs/line-height\n             */\n            leading: [\n                { leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength] },\n            ],\n            /**\n             * List Style Image\n             * @see https://tailwindcss.com/docs/list-style-image\n             */\n            'list-image': [{ 'list-image': ['none', isArbitraryValue] }],\n            /**\n             * List Style Type\n             * @see https://tailwindcss.com/docs/list-style-type\n             */\n            'list-style-type': [{ list: ['none', 'disc', 'decimal', isArbitraryValue] }],\n            /**\n             * List Style Position\n             * @see https://tailwindcss.com/docs/list-style-position\n             */\n            'list-style-position': [{ list: ['inside', 'outside'] }],\n            /**\n             * Placeholder Color\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/placeholder-color\n             */\n            'placeholder-color': [{ placeholder: [colors] }],\n            /**\n             * Placeholder Opacity\n             * @see https://tailwindcss.com/docs/placeholder-opacity\n             */\n            'placeholder-opacity': [{ 'placeholder-opacity': [opacity] }],\n            /**\n             * Text Alignment\n             * @see https://tailwindcss.com/docs/text-align\n             */\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\n            /**\n             * Text Color\n             * @see https://tailwindcss.com/docs/text-color\n             */\n            'text-color': [{ text: [colors] }],\n            /**\n             * Text Opacity\n             * @see https://tailwindcss.com/docs/text-opacity\n             */\n            'text-opacity': [{ 'text-opacity': [opacity] }],\n            /**\n             * Text Decoration\n             * @see https://tailwindcss.com/docs/text-decoration\n             */\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n            /**\n             * Text Decoration Style\n             * @see https://tailwindcss.com/docs/text-decoration-style\n             */\n            'text-decoration-style': [{ decoration: [...getLineStyles(), 'wavy'] }],\n            /**\n             * Text Decoration Thickness\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\n             */\n            'text-decoration-thickness': [{ decoration: ['auto', 'from-font', isLength] }],\n            /**\n             * Text Underline Offset\n             * @see https://tailwindcss.com/docs/text-underline-offset\n             */\n            'underline-offset': [{ 'underline-offset': ['auto', isLength] }],\n            /**\n             * Text Decoration Color\n             * @see https://tailwindcss.com/docs/text-decoration-color\n             */\n            'text-decoration-color': [{ decoration: [colors] }],\n            /**\n             * Text Transform\n             * @see https://tailwindcss.com/docs/text-transform\n             */\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n            /**\n             * Text Overflow\n             * @see https://tailwindcss.com/docs/text-overflow\n             */\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n            /**\n             * Text Indent\n             * @see https://tailwindcss.com/docs/text-indent\n             */\n            indent: [{ indent: [spacing] }],\n            /**\n             * Vertical Alignment\n             * @see https://tailwindcss.com/docs/vertical-align\n             */\n            'vertical-align': [\n                {\n                    align: [\n                        'baseline',\n                        'top',\n                        'middle',\n                        'bottom',\n                        'text-top',\n                        'text-bottom',\n                        'sub',\n                        'super',\n                        isArbitraryLength,\n                    ],\n                },\n            ],\n            /**\n             * Whitespace\n             * @see https://tailwindcss.com/docs/whitespace\n             */\n            whitespace: [\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\n            ],\n            /**\n             * Word Break\n             * @see https://tailwindcss.com/docs/word-break\n             */\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\n            /**\n             * Hyphens\n             * @see https://tailwindcss.com/docs/hyphens\n             */\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\n            /**\n             * Content\n             * @see https://tailwindcss.com/docs/content\n             */\n            content: [{ content: ['none', isArbitraryValue] }],\n            // Backgrounds\n            /**\n             * Background Attachment\n             * @see https://tailwindcss.com/docs/background-attachment\n             */\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\n            /**\n             * Background Clip\n             * @see https://tailwindcss.com/docs/background-clip\n             */\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\n            /**\n             * Background Opacity\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/background-opacity\n             */\n            'bg-opacity': [{ 'bg-opacity': [opacity] }],\n            /**\n             * Background Origin\n             * @see https://tailwindcss.com/docs/background-origin\n             */\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\n            /**\n             * Background Position\n             * @see https://tailwindcss.com/docs/background-position\n             */\n            'bg-position': [{ bg: [...getPositions(), isArbitraryPosition] }],\n            /**\n             * Background Repeat\n             * @see https://tailwindcss.com/docs/background-repeat\n             */\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'round', 'space'] }] }],\n            /**\n             * Background Size\n             * @see https://tailwindcss.com/docs/background-size\n             */\n            'bg-size': [{ bg: ['auto', 'cover', 'contain', isArbitrarySize] }],\n            /**\n             * Background Image\n             * @see https://tailwindcss.com/docs/background-image\n             */\n            'bg-image': [\n                {\n                    bg: [\n                        'none',\n                        { 'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\n                        isArbitraryUrl,\n                    ],\n                },\n            ],\n            /**\n             * Background Color\n             * @see https://tailwindcss.com/docs/background-color\n             */\n            'bg-color': [{ bg: [colors] }],\n            /**\n             * Gradient Color Stops From Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from-pos': [{ from: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops Via Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via-pos': [{ via: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops To Position\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to-pos': [{ to: [gradientColorStopPositions] }],\n            /**\n             * Gradient Color Stops From\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-from': [{ from: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops Via\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-via': [{ via: [gradientColorStops] }],\n            /**\n             * Gradient Color Stops To\n             * @see https://tailwindcss.com/docs/gradient-color-stops\n             */\n            'gradient-to': [{ to: [gradientColorStops] }],\n            // Borders\n            /**\n             * Border Radius\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            rounded: [{ rounded: [borderRadius] }],\n            /**\n             * Border Radius Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-s': [{ 'rounded-s': [borderRadius] }],\n            /**\n             * Border Radius End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-e': [{ 'rounded-e': [borderRadius] }],\n            /**\n             * Border Radius Top\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-t': [{ 'rounded-t': [borderRadius] }],\n            /**\n             * Border Radius Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-r': [{ 'rounded-r': [borderRadius] }],\n            /**\n             * Border Radius Bottom\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-b': [{ 'rounded-b': [borderRadius] }],\n            /**\n             * Border Radius Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-l': [{ 'rounded-l': [borderRadius] }],\n            /**\n             * Border Radius Start Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ss': [{ 'rounded-ss': [borderRadius] }],\n            /**\n             * Border Radius Start End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-se': [{ 'rounded-se': [borderRadius] }],\n            /**\n             * Border Radius End End\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-ee': [{ 'rounded-ee': [borderRadius] }],\n            /**\n             * Border Radius End Start\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-es': [{ 'rounded-es': [borderRadius] }],\n            /**\n             * Border Radius Top Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tl': [{ 'rounded-tl': [borderRadius] }],\n            /**\n             * Border Radius Top Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-tr': [{ 'rounded-tr': [borderRadius] }],\n            /**\n             * Border Radius Bottom Right\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-br': [{ 'rounded-br': [borderRadius] }],\n            /**\n             * Border Radius Bottom Left\n             * @see https://tailwindcss.com/docs/border-radius\n             */\n            'rounded-bl': [{ 'rounded-bl': [borderRadius] }],\n            /**\n             * Border Width\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w': [{ border: [borderWidth] }],\n            /**\n             * Border Width X\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-x': [{ 'border-x': [borderWidth] }],\n            /**\n             * Border Width Y\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-y': [{ 'border-y': [borderWidth] }],\n            /**\n             * Border Width Start\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-s': [{ 'border-s': [borderWidth] }],\n            /**\n             * Border Width End\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-e': [{ 'border-e': [borderWidth] }],\n            /**\n             * Border Width Top\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-t': [{ 'border-t': [borderWidth] }],\n            /**\n             * Border Width Right\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-r': [{ 'border-r': [borderWidth] }],\n            /**\n             * Border Width Bottom\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-b': [{ 'border-b': [borderWidth] }],\n            /**\n             * Border Width Left\n             * @see https://tailwindcss.com/docs/border-width\n             */\n            'border-w-l': [{ 'border-l': [borderWidth] }],\n            /**\n             * Border Opacity\n             * @see https://tailwindcss.com/docs/border-opacity\n             */\n            'border-opacity': [{ 'border-opacity': [opacity] }],\n            /**\n             * Border Style\n             * @see https://tailwindcss.com/docs/border-style\n             */\n            'border-style': [{ border: [...getLineStyles(), 'hidden'] }],\n            /**\n             * Divide Width X\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x': [{ 'divide-x': [borderWidth] }],\n            /**\n             * Divide Width X Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-x-reverse': ['divide-x-reverse'],\n            /**\n             * Divide Width Y\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y': [{ 'divide-y': [borderWidth] }],\n            /**\n             * Divide Width Y Reverse\n             * @see https://tailwindcss.com/docs/divide-width\n             */\n            'divide-y-reverse': ['divide-y-reverse'],\n            /**\n             * Divide Opacity\n             * @see https://tailwindcss.com/docs/divide-opacity\n             */\n            'divide-opacity': [{ 'divide-opacity': [opacity] }],\n            /**\n             * Divide Style\n             * @see https://tailwindcss.com/docs/divide-style\n             */\n            'divide-style': [{ divide: getLineStyles() }],\n            /**\n             * Border Color\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color': [{ border: [borderColor] }],\n            /**\n             * Border Color X\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-x': [{ 'border-x': [borderColor] }],\n            /**\n             * Border Color Y\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-y': [{ 'border-y': [borderColor] }],\n            /**\n             * Border Color Top\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-t': [{ 'border-t': [borderColor] }],\n            /**\n             * Border Color Right\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-r': [{ 'border-r': [borderColor] }],\n            /**\n             * Border Color Bottom\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-b': [{ 'border-b': [borderColor] }],\n            /**\n             * Border Color Left\n             * @see https://tailwindcss.com/docs/border-color\n             */\n            'border-color-l': [{ 'border-l': [borderColor] }],\n            /**\n             * Divide Color\n             * @see https://tailwindcss.com/docs/divide-color\n             */\n            'divide-color': [{ divide: [borderColor] }],\n            /**\n             * Outline Style\n             * @see https://tailwindcss.com/docs/outline-style\n             */\n            'outline-style': [{ outline: ['', ...getLineStyles()] }],\n            /**\n             * Outline Offset\n             * @see https://tailwindcss.com/docs/outline-offset\n             */\n            'outline-offset': [{ 'outline-offset': [isLength] }],\n            /**\n             * Outline Width\n             * @see https://tailwindcss.com/docs/outline-width\n             */\n            'outline-w': [{ outline: [isLength] }],\n            /**\n             * Outline Color\n             * @see https://tailwindcss.com/docs/outline-color\n             */\n            'outline-color': [{ outline: [colors] }],\n            /**\n             * Ring Width\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w': [{ ring: getLengthWithEmpty() }],\n            /**\n             * Ring Width Inset\n             * @see https://tailwindcss.com/docs/ring-width\n             */\n            'ring-w-inset': ['ring-inset'],\n            /**\n             * Ring Color\n             * @see https://tailwindcss.com/docs/ring-color\n             */\n            'ring-color': [{ ring: [colors] }],\n            /**\n             * Ring Opacity\n             * @see https://tailwindcss.com/docs/ring-opacity\n             */\n            'ring-opacity': [{ 'ring-opacity': [opacity] }],\n            /**\n             * Ring Offset Width\n             * @see https://tailwindcss.com/docs/ring-offset-width\n             */\n            'ring-offset-w': [{ 'ring-offset': [isLength] }],\n            /**\n             * Ring Offset Color\n             * @see https://tailwindcss.com/docs/ring-offset-color\n             */\n            'ring-offset-color': [{ 'ring-offset': [colors] }],\n            // Effects\n            /**\n             * Box Shadow\n             * @see https://tailwindcss.com/docs/box-shadow\n             */\n            shadow: [{ shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow] }],\n            /**\n             * Box Shadow Color\n             * @see https://tailwindcss.com/docs/box-shadow-color\n             */\n            'shadow-color': [{ shadow: [isAny] }],\n            /**\n             * Opacity\n             * @see https://tailwindcss.com/docs/opacity\n             */\n            opacity: [{ opacity: [opacity] }],\n            /**\n             * Mix Blend Mode\n             * @see https://tailwindcss.com/docs/mix-blend-mode\n             */\n            'mix-blend': [{ 'mix-blend': getBlendModes() }],\n            /**\n             * Background Blend Mode\n             * @see https://tailwindcss.com/docs/background-blend-mode\n             */\n            'bg-blend': [{ 'bg-blend': getBlendModes() }],\n            // Filters\n            /**\n             * Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/filter\n             */\n            filter: [{ filter: ['', 'none'] }],\n            /**\n             * Blur\n             * @see https://tailwindcss.com/docs/blur\n             */\n            blur: [{ blur: [blur] }],\n            /**\n             * Brightness\n             * @see https://tailwindcss.com/docs/brightness\n             */\n            brightness: [{ brightness: [brightness] }],\n            /**\n             * Contrast\n             * @see https://tailwindcss.com/docs/contrast\n             */\n            contrast: [{ contrast: [contrast] }],\n            /**\n             * Drop Shadow\n             * @see https://tailwindcss.com/docs/drop-shadow\n             */\n            'drop-shadow': [{ 'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue] }],\n            /**\n             * Grayscale\n             * @see https://tailwindcss.com/docs/grayscale\n             */\n            grayscale: [{ grayscale: [grayscale] }],\n            /**\n             * Hue Rotate\n             * @see https://tailwindcss.com/docs/hue-rotate\n             */\n            'hue-rotate': [{ 'hue-rotate': [hueRotate] }],\n            /**\n             * Invert\n             * @see https://tailwindcss.com/docs/invert\n             */\n            invert: [{ invert: [invert] }],\n            /**\n             * Saturate\n             * @see https://tailwindcss.com/docs/saturate\n             */\n            saturate: [{ saturate: [saturate] }],\n            /**\n             * Sepia\n             * @see https://tailwindcss.com/docs/sepia\n             */\n            sepia: [{ sepia: [sepia] }],\n            /**\n             * Backdrop Filter\n             * @deprecated since Tailwind CSS v3.0.0\n             * @see https://tailwindcss.com/docs/backdrop-filter\n             */\n            'backdrop-filter': [{ 'backdrop-filter': ['', 'none'] }],\n            /**\n             * Backdrop Blur\n             * @see https://tailwindcss.com/docs/backdrop-blur\n             */\n            'backdrop-blur': [{ 'backdrop-blur': [blur] }],\n            /**\n             * Backdrop Brightness\n             * @see https://tailwindcss.com/docs/backdrop-brightness\n             */\n            'backdrop-brightness': [{ 'backdrop-brightness': [brightness] }],\n            /**\n             * Backdrop Contrast\n             * @see https://tailwindcss.com/docs/backdrop-contrast\n             */\n            'backdrop-contrast': [{ 'backdrop-contrast': [contrast] }],\n            /**\n             * Backdrop Grayscale\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\n             */\n            'backdrop-grayscale': [{ 'backdrop-grayscale': [grayscale] }],\n            /**\n             * Backdrop Hue Rotate\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n             */\n            'backdrop-hue-rotate': [{ 'backdrop-hue-rotate': [hueRotate] }],\n            /**\n             * Backdrop Invert\n             * @see https://tailwindcss.com/docs/backdrop-invert\n             */\n            'backdrop-invert': [{ 'backdrop-invert': [invert] }],\n            /**\n             * Backdrop Opacity\n             * @see https://tailwindcss.com/docs/backdrop-opacity\n             */\n            'backdrop-opacity': [{ 'backdrop-opacity': [opacity] }],\n            /**\n             * Backdrop Saturate\n             * @see https://tailwindcss.com/docs/backdrop-saturate\n             */\n            'backdrop-saturate': [{ 'backdrop-saturate': [saturate] }],\n            /**\n             * Backdrop Sepia\n             * @see https://tailwindcss.com/docs/backdrop-sepia\n             */\n            'backdrop-sepia': [{ 'backdrop-sepia': [sepia] }],\n            // Tables\n            /**\n             * Border Collapse\n             * @see https://tailwindcss.com/docs/border-collapse\n             */\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\n            /**\n             * Border Spacing\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing': [{ 'border-spacing': [borderSpacing] }],\n            /**\n             * Border Spacing X\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-x': [{ 'border-spacing-x': [borderSpacing] }],\n            /**\n             * Border Spacing Y\n             * @see https://tailwindcss.com/docs/border-spacing\n             */\n            'border-spacing-y': [{ 'border-spacing-y': [borderSpacing] }],\n            /**\n             * Table Layout\n             * @see https://tailwindcss.com/docs/table-layout\n             */\n            'table-layout': [{ table: ['auto', 'fixed'] }],\n            /**\n             * Caption Side\n             * @see https://tailwindcss.com/docs/caption-side\n             */\n            caption: [{ caption: ['top', 'bottom'] }],\n            // Transitions and Animation\n            /**\n             * Tranisition Property\n             * @see https://tailwindcss.com/docs/transition-property\n             */\n            transition: [\n                {\n                    transition: [\n                        'none',\n                        'all',\n                        '',\n                        'colors',\n                        'opacity',\n                        'shadow',\n                        'transform',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Transition Duration\n             * @see https://tailwindcss.com/docs/transition-duration\n             */\n            duration: [{ duration: getNumberAndArbitrary() }],\n            /**\n             * Transition Timing Function\n             * @see https://tailwindcss.com/docs/transition-timing-function\n             */\n            ease: [{ ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue] }],\n            /**\n             * Transition Delay\n             * @see https://tailwindcss.com/docs/transition-delay\n             */\n            delay: [{ delay: getNumberAndArbitrary() }],\n            /**\n             * Animation\n             * @see https://tailwindcss.com/docs/animation\n             */\n            animate: [{ animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue] }],\n            // Transforms\n            /**\n             * Transform\n             * @see https://tailwindcss.com/docs/transform\n             */\n            transform: [{ transform: ['', 'gpu', 'none'] }],\n            /**\n             * Scale\n             * @see https://tailwindcss.com/docs/scale\n             */\n            scale: [{ scale: [scale] }],\n            /**\n             * Scale X\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-x': [{ 'scale-x': [scale] }],\n            /**\n             * Scale Y\n             * @see https://tailwindcss.com/docs/scale\n             */\n            'scale-y': [{ 'scale-y': [scale] }],\n            /**\n             * Rotate\n             * @see https://tailwindcss.com/docs/rotate\n             */\n            rotate: [{ rotate: [isInteger, isArbitraryValue] }],\n            /**\n             * Translate X\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-x': [{ 'translate-x': [translate] }],\n            /**\n             * Translate Y\n             * @see https://tailwindcss.com/docs/translate\n             */\n            'translate-y': [{ 'translate-y': [translate] }],\n            /**\n             * Skew X\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-x': [{ 'skew-x': [skew] }],\n            /**\n             * Skew Y\n             * @see https://tailwindcss.com/docs/skew\n             */\n            'skew-y': [{ 'skew-y': [skew] }],\n            /**\n             * Transform Origin\n             * @see https://tailwindcss.com/docs/transform-origin\n             */\n            'transform-origin': [\n                {\n                    origin: [\n                        'center',\n                        'top',\n                        'top-right',\n                        'right',\n                        'bottom-right',\n                        'bottom',\n                        'bottom-left',\n                        'left',\n                        'top-left',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            // Interactivity\n            /**\n             * Accent Color\n             * @see https://tailwindcss.com/docs/accent-color\n             */\n            accent: [{ accent: ['auto', colors] }],\n            /**\n             * Appearance\n             * @see https://tailwindcss.com/docs/appearance\n             */\n            appearance: ['appearance-none'],\n            /**\n             * Cursor\n             * @see https://tailwindcss.com/docs/cursor\n             */\n            cursor: [\n                {\n                    cursor: [\n                        'auto',\n                        'default',\n                        'pointer',\n                        'wait',\n                        'text',\n                        'move',\n                        'help',\n                        'not-allowed',\n                        'none',\n                        'context-menu',\n                        'progress',\n                        'cell',\n                        'crosshair',\n                        'vertical-text',\n                        'alias',\n                        'copy',\n                        'no-drop',\n                        'grab',\n                        'grabbing',\n                        'all-scroll',\n                        'col-resize',\n                        'row-resize',\n                        'n-resize',\n                        'e-resize',\n                        's-resize',\n                        'w-resize',\n                        'ne-resize',\n                        'nw-resize',\n                        'se-resize',\n                        'sw-resize',\n                        'ew-resize',\n                        'ns-resize',\n                        'nesw-resize',\n                        'nwse-resize',\n                        'zoom-in',\n                        'zoom-out',\n                        isArbitraryValue,\n                    ],\n                },\n            ],\n            /**\n             * Caret Color\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n             */\n            'caret-color': [{ caret: [colors] }],\n            /**\n             * Pointer Events\n             * @see https://tailwindcss.com/docs/pointer-events\n             */\n            'pointer-events': [{ 'pointer-events': ['none', 'auto'] }],\n            /**\n             * Resize\n             * @see https://tailwindcss.com/docs/resize\n             */\n            resize: [{ resize: ['none', 'y', 'x', ''] }],\n            /**\n             * Scroll Behavior\n             * @see https://tailwindcss.com/docs/scroll-behavior\n             */\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\n            /**\n             * Scroll Margin\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-m': [{ 'scroll-m': [spacing] }],\n            /**\n             * Scroll Margin X\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mx': [{ 'scroll-mx': [spacing] }],\n            /**\n             * Scroll Margin Y\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-my': [{ 'scroll-my': [spacing] }],\n            /**\n             * Scroll Margin Start\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ms': [{ 'scroll-ms': [spacing] }],\n            /**\n             * Scroll Margin End\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-me': [{ 'scroll-me': [spacing] }],\n            /**\n             * Scroll Margin Top\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mt': [{ 'scroll-mt': [spacing] }],\n            /**\n             * Scroll Margin Right\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mr': [{ 'scroll-mr': [spacing] }],\n            /**\n             * Scroll Margin Bottom\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-mb': [{ 'scroll-mb': [spacing] }],\n            /**\n             * Scroll Margin Left\n             * @see https://tailwindcss.com/docs/scroll-margin\n             */\n            'scroll-ml': [{ 'scroll-ml': [spacing] }],\n            /**\n             * Scroll Padding\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-p': [{ 'scroll-p': [spacing] }],\n            /**\n             * Scroll Padding X\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-px': [{ 'scroll-px': [spacing] }],\n            /**\n             * Scroll Padding Y\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-py': [{ 'scroll-py': [spacing] }],\n            /**\n             * Scroll Padding Start\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-ps': [{ 'scroll-ps': [spacing] }],\n            /**\n             * Scroll Padding End\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pe': [{ 'scroll-pe': [spacing] }],\n            /**\n             * Scroll Padding Top\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pt': [{ 'scroll-pt': [spacing] }],\n            /**\n             * Scroll Padding Right\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pr': [{ 'scroll-pr': [spacing] }],\n            /**\n             * Scroll Padding Bottom\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pb': [{ 'scroll-pb': [spacing] }],\n            /**\n             * Scroll Padding Left\n             * @see https://tailwindcss.com/docs/scroll-padding\n             */\n            'scroll-pl': [{ 'scroll-pl': [spacing] }],\n            /**\n             * Scroll Snap Align\n             * @see https://tailwindcss.com/docs/scroll-snap-align\n             */\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\n            /**\n             * Scroll Snap Stop\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\n             */\n            'snap-stop': [{ snap: ['normal', 'always'] }],\n            /**\n             * Scroll Snap Type\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\n            /**\n             * Scroll Snap Type Strictness\n             * @see https://tailwindcss.com/docs/scroll-snap-type\n             */\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\n            /**\n             * Touch Action\n             * @see https://tailwindcss.com/docs/touch-action\n             */\n            touch: [\n                {\n                    touch: [\n                        'auto',\n                        'none',\n                        'pinch-zoom',\n                        'manipulation',\n                        { pan: ['x', 'left', 'right', 'y', 'up', 'down'] },\n                    ],\n                },\n            ],\n            /**\n             * User Select\n             * @see https://tailwindcss.com/docs/user-select\n             */\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\n            /**\n             * Will Change\n             * @see https://tailwindcss.com/docs/will-change\n             */\n            'will-change': [\n                { 'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue] },\n            ],\n            // SVG\n            /**\n             * Fill\n             * @see https://tailwindcss.com/docs/fill\n             */\n            fill: [{ fill: [colors, 'none'] }],\n            /**\n             * Stroke Width\n             * @see https://tailwindcss.com/docs/stroke-width\n             */\n            'stroke-w': [{ stroke: [isLength, isArbitraryNumber] }],\n            /**\n             * Stroke\n             * @see https://tailwindcss.com/docs/stroke\n             */\n            stroke: [{ stroke: [colors, 'none'] }],\n            // Accessibility\n            /**\n             * Screen Readers\n             * @see https://tailwindcss.com/docs/screen-readers\n             */\n            sr: ['sr-only', 'not-sr-only'],\n        },\n        conflictingClassGroups: {\n            overflow: ['overflow-x', 'overflow-y'],\n            overscroll: ['overscroll-x', 'overscroll-y'],\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n            'inset-x': ['right', 'left'],\n            'inset-y': ['top', 'bottom'],\n            flex: ['basis', 'grow', 'shrink'],\n            gap: ['gap-x', 'gap-y'],\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n            px: ['pr', 'pl'],\n            py: ['pt', 'pb'],\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n            mx: ['mr', 'ml'],\n            my: ['mt', 'mb'],\n            'font-size': ['leading'],\n            'fvn-normal': [\n                'fvn-ordinal',\n                'fvn-slashed-zero',\n                'fvn-figure',\n                'fvn-spacing',\n                'fvn-fraction',\n            ],\n            'fvn-ordinal': ['fvn-normal'],\n            'fvn-slashed-zero': ['fvn-normal'],\n            'fvn-figure': ['fvn-normal'],\n            'fvn-spacing': ['fvn-normal'],\n            'fvn-fraction': ['fvn-normal'],\n            rounded: [\n                'rounded-s',\n                'rounded-e',\n                'rounded-t',\n                'rounded-r',\n                'rounded-b',\n                'rounded-l',\n                'rounded-ss',\n                'rounded-se',\n                'rounded-ee',\n                'rounded-es',\n                'rounded-tl',\n                'rounded-tr',\n                'rounded-br',\n                'rounded-bl',\n            ],\n            'rounded-s': ['rounded-ss', 'rounded-es'],\n            'rounded-e': ['rounded-se', 'rounded-ee'],\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\n            'rounded-r': ['rounded-tr', 'rounded-br'],\n            'rounded-b': ['rounded-br', 'rounded-bl'],\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n            'border-w': [\n                'border-w-s',\n                'border-w-e',\n                'border-w-t',\n                'border-w-r',\n                'border-w-b',\n                'border-w-l',\n            ],\n            'border-w-x': ['border-w-r', 'border-w-l'],\n            'border-w-y': ['border-w-t', 'border-w-b'],\n            'border-color': [\n                'border-color-t',\n                'border-color-r',\n                'border-color-b',\n                'border-color-l',\n            ],\n            'border-color-x': ['border-color-r', 'border-color-l'],\n            'border-color-y': ['border-color-t', 'border-color-b'],\n            'scroll-m': [\n                'scroll-mx',\n                'scroll-my',\n                'scroll-ms',\n                'scroll-me',\n                'scroll-mt',\n                'scroll-mr',\n                'scroll-mb',\n                'scroll-ml',\n            ],\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\n            'scroll-p': [\n                'scroll-px',\n                'scroll-py',\n                'scroll-ps',\n                'scroll-pe',\n                'scroll-pt',\n                'scroll-pr',\n                'scroll-pb',\n                'scroll-pl',\n            ],\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\n        },\n        conflictingClassGroupModifiers: {\n            'font-size': ['leading'],\n        },\n    } as const satisfies Config\n}\n", "import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown,\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object],\n            )\n        }\n    }\n}\n", "import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n", "import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\n\nexport const twMerge = createTailwindMerge(getDefaultConfig)\n", "import { twJoin } from './lib/tw-join'\n\nexport { createTailwindMerge } from './lib/create-tailwind-merge'\nexport { getDefaultConfig } from './lib/default-config'\nexport { extendTailwindMerge } from './lib/extend-tailwind-merge'\nexport { fromTheme } from './lib/from-theme'\nexport { mergeConfigs } from './lib/merge-configs'\nexport { twJoin, type ClassNameValue } from './lib/tw-join'\nexport { twMerge } from './lib/tw-merge'\nexport type { Config } from './lib/types'\nexport * as validators from './lib/validators'\n\n/**\n * @deprecated Will be removed in next major version. Use `twJoin` instead.\n */\nexport const join = twJoin\n"],
  "mappings": "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",
  "names": []
}
